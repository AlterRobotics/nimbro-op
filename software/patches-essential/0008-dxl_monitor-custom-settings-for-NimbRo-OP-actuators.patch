From 052ab9f6aa34d309837563f04bdd0b7862bc48b3 Mon Sep 17 00:00:00 2001
From: Max Schwarz <Max@x-quadraht.de>
Date: Fri, 5 Oct 2012 14:14:00 +0200
Subject: [PATCH 08/25] dxl_monitor: custom settings for NimbRo-OP actuators

Changes:
 - do not overwrite custom limits
 - lower torque limits on Head Servos
---
 Linux/project/dxl_monitor/cmd_process.cpp |  143 +++--------------------------
 1 file changed, 14 insertions(+), 129 deletions(-)

diff --git a/Linux/project/dxl_monitor/cmd_process.cpp b/Linux/project/dxl_monitor/cmd_process.cpp
index 6085c06..7de7ff0 100644
--- a/Linux/project/dxl_monitor/cmd_process.cpp
+++ b/Linux/project/dxl_monitor/cmd_process.cpp
@@ -284,10 +284,9 @@ void Reset(Robot::CM730 *cm730, int id)
 		return;
 	}
 
-	FailCount = 0;
 	while(1)
 	{
-		if(cm730->WriteByte(id, MX28::P_RETURN_DELAY_TIME, 0, 0) == CM730::SUCCESS)
+		if(cm730->WriteByte(id, MX28::P_RETURN_LEVEL, 2, 0) == CM730::SUCCESS)
 			break;
 
 		FailCount++;
@@ -298,11 +297,12 @@ void Reset(Robot::CM730 *cm730, int id)
 		}
 		usleep(10000);
 	}
+	FailCount = 0;
 
 	FailCount = 0;
 	while(1)
 	{
-		if(cm730->WriteByte(id, MX28::P_RETURN_LEVEL, 2, 0) == CM730::SUCCESS)
+		if(cm730->WriteByte(id, MX28::P_RETURN_DELAY_TIME, 0, 0) == CM730::SUCCESS)
 			break;
 
 		FailCount++;
@@ -316,125 +316,6 @@ void Reset(Robot::CM730 *cm730, int id)
 
 	if(id != CM730::ID_CM)
 	{
-		double cwLimit = MX28::MIN_ANGLE;
-		double ccwLimit = MX28::MAX_ANGLE;
-
-		switch(id)
-		{
-		case JointData::ID_R_SHOULDER_ROLL:
-			cwLimit = -75.0;
-			ccwLimit = 135.0;
-			break;
-
-		case JointData::ID_L_SHOULDER_ROLL:
-			cwLimit = -135.0;
-			ccwLimit = 75.0;
-			break;
-
-		case JointData::ID_R_ELBOW:
-			cwLimit = -95.0;
-			ccwLimit = 70.0;
-			break;
-
-		case JointData::ID_L_ELBOW:
-			cwLimit = -70.0;
-			ccwLimit = 95.0;
-			break;
-
-		case JointData::ID_R_HIP_YAW:
-            cwLimit = -123.0;
-            ccwLimit = 53.0;
-            break;
-
-		case JointData::ID_L_HIP_YAW:
-			cwLimit = -53.0;
-			ccwLimit = 123.0;
-			break;
-
-		case JointData::ID_R_HIP_ROLL:
-			cwLimit = -45.0;
-			ccwLimit = 59.0;
-			break;
-
-		case JointData::ID_L_HIP_ROLL:
-			cwLimit = -59.0;
-			ccwLimit = 45.0;
-			break;
-
-		case JointData::ID_R_HIP_PITCH:
-			cwLimit = -100.0;
-			ccwLimit = 29.0;
-			break;
-
-		case JointData::ID_L_HIP_PITCH:
-			cwLimit = -29.0;
-			ccwLimit = 100.0;
-			break;
-
-		case JointData::ID_R_KNEE:
-			cwLimit = -6.0;
-			ccwLimit = 130.0;
-			break;
-
-		case JointData::ID_L_KNEE:
-			cwLimit = -130.0;
-			ccwLimit = 6.0;
-			break;
-
-		case JointData::ID_R_ANKLE_PITCH:
-			cwLimit = -72.0;
-			ccwLimit = 80.0;
-			break;
-
-		case JointData::ID_L_ANKLE_PITCH:
-			cwLimit = -80.0;
-			ccwLimit = 72.0;
-			break;
-
-		case JointData::ID_R_ANKLE_ROLL:
-			cwLimit = -44.0;
-			ccwLimit = 63.0;
-			break;
-
-		case JointData::ID_L_ANKLE_ROLL:
-			cwLimit = -63.0;
-			ccwLimit = 44.0;
-			break;
-
-		case JointData::ID_HEAD_TILT:
-			cwLimit = -25.0;
-			ccwLimit = 55.0;
-			break;
-		}
-		
-		FailCount = 0;
-		while(1)
-		{
-			if(cm730->WriteWord(id, MX28::P_CW_ANGLE_LIMIT_L, MX28::Angle2Value(cwLimit), 0) == CM730::SUCCESS)
-				break;
-
-			FailCount++;
-			if(FailCount > FailMaxCount)
-			{
-				printf("Fail\n");
-				return;
-			}
-			usleep(10000);
-		}		
-		FailCount = 0;
-		while(1)
-		{
-			if(cm730->WriteWord(id, MX28::P_CCW_ANGLE_LIMIT_L, MX28::Angle2Value(ccwLimit), 0) == CM730::SUCCESS)
-				break;
-
-			FailCount++;
-			if(FailCount > FailMaxCount)
-			{
-				printf("Fail\n");
-				return;
-			}
-			usleep(10000);
-		}		
 		FailCount = 0;
 		while(1)
 		{
@@ -466,7 +347,7 @@ void Reset(Robot::CM730 *cm730, int id)
 		FailCount = 0;
 		while(1)
 		{
-			if(cm730->WriteByte(id, MX28::P_HIGH_LIMIT_VOLTAGE, 140, 0) == CM730::SUCCESS)
+			if(cm730->WriteByte(id, MX28::P_HIGH_LIMIT_VOLTAGE, 160, 0) == CM730::SUCCESS)
 				break;
 
 			FailCount++;
@@ -480,7 +361,14 @@ void Reset(Robot::CM730 *cm730, int id)
 		FailCount = 0;
 		while(1)
 		{
-			if(cm730->WriteWord(id, MX28::P_MAX_TORQUE_L, MX28::MAX_VALUE, 0) == CM730::SUCCESS)
+			int torque_limit;
+			if(id == JointData::ID_HEAD_PAN|| id == JointData::ID_HEAD_TILT){
+				torque_limit = 200;
+			}
+			else{
+				torque_limit = 1023;
+			}
+			if(cm730->WriteWord(id, MX28::P_MAX_TORQUE_L, torque_limit, 0) == CM730::SUCCESS)
 				break;
 
 			FailCount++;
@@ -526,11 +414,6 @@ void Reset(Robot::CM730 *cm730, int id)
 
 void Write(Robot::CM730 *cm730, int id, int addr, int value)
 {
-	if(addr == MX28::P_RETURN_DELAY_TIME || addr == MX28::P_RETURN_LEVEL)
-	{
-		printf( " Can not change this address[%d]\n", addr);
-		return;
-	}
 
 	int error = 0;
 	int res;
@@ -580,6 +463,8 @@ void Write(Robot::CM730 *cm730, int id, int addr, int value)
             || addr == MX28::P_ALARM_SHUTDOWN
             || addr == MX28::P_TORQUE_ENABLE
             || addr == MX28::P_LED
+            || addr == MX28::P_RETURN_DELAY_TIME
+            || addr == MX28::P_RETURN_LEVEL
 #ifdef MX28_1024
             || addr == MX28::P_CW_COMPLIANCE_MARGIN
             || addr == MX28::P_CCW_COMPLIANCE_MARGIN
-- 
1.7.9.5

